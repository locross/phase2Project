{"ast":null,"code":"var _jsxFileName = \"/home/locr/SE_Work/phase2Project/src/components/weatherAPI.js\";\nimport React, { useState } from \"react\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseWeatherAPI() {\n  this.state = {\n    location: \"Location\",\n    weather: [],\n    days: []\n  };\n\n  WeatherGetAPI = () => {\n    if (this.state.location != \"Location\") {\n      fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${this.state.location}?unitGroup=metric&elements=datetime%2Ctempmax%2Ctempmin%2Ctemp&include=days&key=S7J8YKHYZTCWAAE9T4BTR9D4K&contentType=json`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          weather: data\n        });\n        this.setState({\n          days: data.days[0]\n        });\n        console.log(data);\n      }).catch(error => console.log(error));\n    } else {\n      console.log(this.state.location);\n    }\n\n    ;\n  };\n\n  HandleClick = x => {\n    this.setState({\n      location: x\n    });\n    console.log(x);\n    console.log(this.state.weather);\n    console.log(this.state.days);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        title: this.state.location,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => {\n            this.HandleClick('Melbourne');\n          },\n          children: \"Melbourne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => {\n            this.HandleClick('Sydney');\n          },\n          children: \"Sydney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.WeatherGetAPI();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weather-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.weather.resolvedAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: this.state.days.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature Avg \", this.state.days.temp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature Max \", this.state.days.tempmax]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature Min \", this.state.days.tempmin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n}\n_c = UseWeatherAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseWeatherAPI\");","map":{"version":3,"names":["React","useState","Dropdown","DropdownButton","Button","UseWeatherAPI","state","location","weather","days","WeatherGetAPI","fetch","then","response","json","data","setState","console","log","catch","error","HandleClick","x","resolvedAddress","datetime","temp","tempmax","tempmin"],"sources":["/home/locr/SE_Work/phase2Project/src/components/weatherAPI.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function UseWeatherAPI() {\r\n    \r\n        this.state = {\r\n            location: \"Location\",\r\n            weather: [],\r\n            days: []\r\n        };\r\n    \r\n    \r\n    WeatherGetAPI = () => {\r\n        if (this.state.location != \"Location\"){\r\n              fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${this.state.location}?unitGroup=metric&elements=datetime%2Ctempmax%2Ctempmin%2Ctemp&include=days&key=S7J8YKHYZTCWAAE9T4BTR9D4K&contentType=json`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                this.setState({weather: data})\r\n                this.setState({days: data.days[0]})\r\n                console.log(data)\r\n            })\r\n            .catch(error => console.log(error));\r\n        }else{\r\n            console.log(this.state.location)\r\n        };\r\n    }    \r\n          \r\n    HandleClick = (x) => {\r\n        this.setState({location: x})\r\n        console.log(x)\r\n        console.log(this.state.weather)\r\n        console.log(this.state.days)\r\n    }\r\n    \r\n        return(\r\n            <div>\r\n                <div id=\"buttons-container\">\r\n                    <DropdownButton id=\"dropdown-basic-button\" title={this.state.location}>\r\n                        <Dropdown.Item onClick={() => {this.HandleClick('Melbourne')}}>Melbourne</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => {this.HandleClick('Sydney')}} >Sydney</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <Button variant=\"primary\" onClick={() => {this.WeatherGetAPI()}}>Submit</Button>{' '}\r\n                </div>\r\n                <div id=\"weather-container\">\r\n                    <h2>{this.state.weather.resolvedAddress}</h2>\r\n                    <ul>\r\n                        <li>{this.state.days.datetime}</li>\r\n                        <li>Temperature Avg {this.state.days.temp}</li>\r\n                        <li>Temperature Max {this.state.days.tempmax}</li>\r\n                        <li>Temperature Min {this.state.days.tempmin}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n}       \r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;;AAEA,eAAe,SAASC,aAAT,GAAyB;EAEhC,KAAKC,KAAL,GAAa;IACTC,QAAQ,EAAE,UADD;IAETC,OAAO,EAAE,EAFA;IAGTC,IAAI,EAAE;EAHG,CAAb;;EAOJC,aAAa,GAAG,MAAM;IAClB,IAAI,KAAKJ,KAAL,CAAWC,QAAX,IAAuB,UAA3B,EAAsC;MAChCI,KAAK,CAAE,uFAAsF,KAAKL,KAAL,CAAWC,QAAS,4HAA5G,EAAyO;QAC5O,UAAU,KADkO;QAE5O,WAAW;UACP,gBAAgB;QADT;MAFiO,CAAzO,CAAL,CAMDK,IANC,CAMIC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACH,CARC,EASDF,IATC,CASIG,IAAI,IAAI;QACV,KAAKC,QAAL,CAAc;UAACR,OAAO,EAAEO;QAAV,CAAd;QACA,KAAKC,QAAL,CAAc;UAACP,IAAI,EAAEM,IAAI,CAACN,IAAL,CAAU,CAAV;QAAP,CAAd;QACAQ,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACH,CAbC,EAcDI,KAdC,CAcKC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAdd;IAeL,CAhBD,MAgBK;MACDH,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,QAAvB;IACH;;IAAA;EACJ,CApBD;;EAsBAc,WAAW,GAAIC,CAAD,IAAO;IACjB,KAAKN,QAAL,CAAc;MAACT,QAAQ,EAAEe;IAAX,CAAd;IACAL,OAAO,CAACC,GAAR,CAAYI,CAAZ;IACAL,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWE,OAAvB;IACAS,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWG,IAAvB;EACH,CALD;;EAOI,oBACI;IAAA,wBACI;MAAK,EAAE,EAAC,mBAAR;MAAA,wBACI,QAAC,cAAD;QAAgB,EAAE,EAAC,uBAAnB;QAA2C,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAA7D;QAAA,wBACI,QAAC,QAAD,CAAU,IAAV;UAAe,OAAO,EAAE,MAAM;YAAC,KAAKc,WAAL,CAAiB,WAAjB;UAA8B,CAA7D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,QAAD,CAAU,IAAV;UAAe,OAAO,EAAE,MAAM;YAAC,KAAKA,WAAL,CAAiB,QAAjB;UAA2B,CAA1D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,MAAD;QAAQ,OAAO,EAAC,SAAhB;QAA0B,OAAO,EAAE,MAAM;UAAC,KAAKX,aAAL;QAAqB,CAA/D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,EAKqF,GALrF;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAQI;MAAK,EAAE,EAAC,mBAAR;MAAA,wBACI;QAAA,UAAK,KAAKJ,KAAL,CAAWE,OAAX,CAAmBe;MAAxB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,wBACI;UAAA,UAAK,KAAKjB,KAAL,CAAWG,IAAX,CAAgBe;QAArB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,+BAAqB,KAAKlB,KAAL,CAAWG,IAAX,CAAgBgB,IAArC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA,+BAAqB,KAAKnB,KAAL,CAAWG,IAAX,CAAgBiB,OAArC;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA,+BAAqB,KAAKpB,KAAL,CAAWG,IAAX,CAAgBkB,OAArC;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBP;KA3DuBtB,a"},"metadata":{},"sourceType":"module"}
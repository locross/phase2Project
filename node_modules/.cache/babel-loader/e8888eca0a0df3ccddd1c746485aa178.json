{"ast":null,"code":"var _jsxFileName = \"/home/locr/SE_Work/phase2Project/src/api/weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseWeatherApi = () => {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n\n  let fetchWeather = () => {\n    fetch(\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/melbourne?unitGroup=metric&elements=datetime%2CdatetimeEpoch%2Ctempmax%2Ctempmin%2Ctemp%2Cfeelslike%2Csunrise%2Csunset&key=JB7CB9FV8WLE3SE7N3AYLFWT9&contentType=json\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setWeather(data);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchWeather();\n  }, []);\n  console.log(weather);\n  console.log(weather.days);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: weather.resolvedAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseWeatherApi, \"Mos131Hxz3VSc+jVtInwzSzjUQ4=\");\n\n_c = UseWeatherApi;\nexport default UseWeatherApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseWeatherApi\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","UseWeatherApi","weather","setWeather","fetchWeather","fetch","then","response","json","data","catch","error","console","log","days","resolvedAddress"],"sources":["/home/locr/SE_Work/phase2Project/src/api/weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nconst UseWeatherApi = () => {\r\n    const [weather, setWeather] = useState([])\r\n    \r\n    let fetchWeather = () => {\r\n        fetch(\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/melbourne?unitGroup=metric&elements=datetime%2CdatetimeEpoch%2Ctempmax%2Ctempmin%2Ctemp%2Cfeelslike%2Csunrise%2Csunset&key=JB7CB9FV8WLE3SE7N3AYLFWT9&contentType=json\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            setWeather(data);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchWeather()\r\n    }, [])\r\n    console.log(weather)\r\n    console.log(weather.days)\r\n    return(\r\n        <div>\r\n        <p>{weather.resolvedAddress}</p>\r\n       <p>{}</p>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UseWeatherApi\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;EAEA,IAAIK,YAAY,GAAG,MAAM;IACrBC,KAAK,CAAC,2PAAD,EAA8P;MAC/P,UAAU,KADqP;MAE/P,WAAW;QACP,gBAAgB;MADT;IAFoP,CAA9P,CAAL,CAMCC,IAND,CAMMC,QAAQ,IAAI;MACd,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACH,CARD,EASCF,IATD,CASMG,IAAI,IAAI;MACVN,UAAU,CAACM,IAAD,CAAV;IACH,CAXD,EAYCC,KAZD,CAYOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAZhB;EAaH,CAdD;;EAgBAb,SAAS,CAAC,MAAM;IACZM,YAAY;EACf,CAFQ,EAEN,EAFM,CAAT;EAGAQ,OAAO,CAACC,GAAR,CAAYX,OAAZ;EACAU,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACY,IAApB;EACA,oBACI;IAAA,wBACA;MAAA,UAAIZ,OAAO,CAACa;IAAZ;MAAA;MAAA;MAAA;IAAA,QADA,eAED;MAAA;MAAA;MAAA;IAAA,QAFC;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CA9BD;;GAAMd,a;;KAAAA,a;AAiCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}
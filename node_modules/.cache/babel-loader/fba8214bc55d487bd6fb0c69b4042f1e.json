{"ast":null,"code":"import React from \"react\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass UseWeatherAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.FetchAPI = () => {\n      fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/$location}?unitGroup=metric&elements=datetime%2Ctempmax%2Ctempmin%2Ctemp&include=current&key=JB7CB9FV8WLE3SE7N3AYLFWT9&contentType=json`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        setWeather(data);\n      }).catch(error => console.log(error));\n      console.log(weather);\n    };\n\n    this.state = {\n      location: \"melbourne\"\n    };\n  }\n\n}\n\nexport default UseWeatherAPI;","map":{"version":3,"names":["React","DropdownButton","Dropdown","Button","UseWeatherAPI","Component","constructor","props","FetchAPI","fetch","then","response","json","data","setWeather","catch","error","console","log","weather","state","location"],"sources":["/home/locr/SE_Work/phase2Project/src/components/weather.js"],"sourcesContent":["import React  from \"react\"\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass UseWeatherAPI extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {location: \"melbourne\"}\r\n    }\r\n\r\n    FetchAPI = () => {\r\n            fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/$location}?unitGroup=metric&elements=datetime%2Ctempmax%2Ctempmin%2Ctemp&include=current&key=JB7CB9FV8WLE3SE7N3AYLFWT9&contentType=json`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n                })\r\n                \r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n            \r\n                setWeather(data);\r\n            \r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        console.log(weather)\r\n        }\r\n    \r\n    \r\n       \r\n       \r\n}\r\nexport default UseWeatherAPI;"],"mappings":"AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;;AAEA,MAAMC,aAAN,SAA4BC,SAA5B,CAAsC;EAClCC,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;;IADc,KAKlBC,QALkB,GAKP,MAAM;MACTC,KAAK,CAAE,6NAAF,EAAgO;QACjO,UAAU,KADuN;QAEjO,WAAW;UACP,gBAAgB;QADT;MAFsN,CAAhO,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACH,CATD,EAUCF,IAVD,CAUMG,IAAI,IAAI;QAEVC,UAAU,CAACD,IAAD,CAAV;MAEH,CAdD,EAeCE,KAfD,CAeOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAfhB;MAiBJC,OAAO,CAACC,GAAR,CAAYC,OAAZ;IACC,CAxBa;;IAEd,KAAKC,KAAL,GAAa;MAACC,QAAQ,EAAE;IAAX,CAAb;EACH;;AAJiC;;AA+BtC,eAAejB,aAAf"},"metadata":{},"sourceType":"module"}